
public class AddTwoNumbers {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		ListNode lc = new ListNode(2);
		ListNode lb = new ListNode(5,lc);
		ListNode la = new ListNode(7,lb);
		
		ListNode L3 = new ListNode(3);
		ListNode L2 = new ListNode(0,L3);
		ListNode L1 = new ListNode(4,L2);
		addTwoNumbers(la,L1);
	}
	
	public static ListNode addTwoNumbers(ListNode l1, ListNode l2) {
		
		ListNode head = null; 
		ListNode current = null; 
		int carry = 0; 
		
		while (l1 != null || l2 != null || carry != 0) {
			int sum = carry; 
			
			if (l1 != null) {
				sum += l1.val; 
				l1 = l1.next; 
			}
			if (l2 != null) {
				sum += l2.val; 
				l2 = l2.next; 
			}
			
			carry = sum / 10; 
			ListNode newNode = new ListNode(sum % 10);
			
			if (head == null) {
				head = newNode;
				current = head; 
			} else {
				current.next = newNode; 
				current = current.next; 
			}
		}
		
		return head;
	}
	
	/*
	 public static ListNode addTwoNumbers(ListNode l1, ListNode l2) {
	        ListNode dummyHead = new ListNode(0);
	        ListNode current = dummyHead;
	        int carry = 0;
	        
	        while (l1 != null || l2 != null || carry != 0) {
	            // Mevcut basamak değerlerini al (eğer varsa)
	            int val1 = (l1 != null) ? l1.val : 0;
	            int val2 = (l2 != null) ? l2.val : 0;
	            
	            // Toplamı ve eldeyi hesapla
	            int total = val1 + val2 + carry;
	            carry = total / 10;
	            int digit = total % 10;
	            
	            // Yeni düğüm oluştur ve listeye ekle
	            current.next = new ListNode(digit);
	            current = current.next;
	            
	            // Listeleri ilerlet (eğer varsa)
	            if (l1 != null) l1 = l1.next;
	            if (l2 != null) l2 = l2.next;
	        }
	        
	        return dummyHead.next;
	     }
*/

}

class ListNode {
	  int val;
	  ListNode next = null;
	  ListNode() {}
	  ListNode(int val) { this.val = val; }
	  ListNode(int val, ListNode next) { this.val = val; this.next = next; }
	  }

